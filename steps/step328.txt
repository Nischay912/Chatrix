Now lets open terminal and do > npm i axios : its a replacement for FETCH api ; so instead of Fetch API , we'll be using this Axios , which is much more convenient to use.

axios is a popular JavaScript library for making HTTP requests ; HTTP requests are used to communicate with a server , like : Get data from a database/API , Send data to a server (like a form submission) , Update or delete data ; It works in both browser and Node.js environments..

Axios makes HTTP requests easier than using fetch or XMLHttpRequest because : it has simple syntax , Supports GET, POST, PUT, DELETE requests easily , Handles JSON automatically , Supports request/response interceptors and also : Handles errors in one place.

Lets check it using an example here below -

We’ll do a GET request to get a list of users from a fake API.

Using fetch -

// fetch example
fetch("https://jsonplaceholder.typicode.com/users")
  .then(response => {
    if (!response.ok) {
      throw new Error("Network response was not ok " + response.status);
    }
    return response.json(); // parse JSON
  })
  .then(data => {
    console.log("Users fetched with fetch:", data);
  })
  .catch(error => {
    console.error("Fetch error:", error);
  });

So, here : 

You always have to check response.ok manually to catch errors ; You must call response.json() to parse the data ; and : Error handling is slightly more longer to write to do it.

------------------------------------------------------------------------------------------

Using axios -

import axios from "axios";

// axios example
axios.get("https://jsonplaceholder.typicode.com/users")
  .then(response => {
    console.log("Users fetched with axios:", response.data);
  })
  .catch(error => {
    console.error("Axios error:", error);
  });

Why axios is easier , because -

JSON is automatically parsed → no need to call .json() ; Errors for bad HTTP status codes (like 404, 500) are automatically caught in .catch() ; Cleaner, shorter syntax for GET, POST, PUT, DELETE requests.

So create a "lib" folder in src > then create an axios.js file to set up this "axios" for our application , see the next steps there.